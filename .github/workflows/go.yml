name: Go

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:     
  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Get version
        id: get_version
        run: |
          ls -la
          touch version.txt
          echo "1.0.0" > version.txt
          MAJOR=$(cat version.txt | cut -d . -f 1)
          MINOR=$(cat version.txt | cut -d . -f 2)
          PATCH=$(cat version.txt | cut -d . -f 3)
          VERSION="v${MAJOR}.${MINOR}.${PATCH}"
          echo "::set-output name=version::${VERSION}"
          ls -la
          
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ needs.get_version.outputs.version }}
          release_name: ${{ needs.get_version.outputs.version }}
          body: |
            Changes in this Release
            - First Change
            - Second Change
          draft: false
          prerelease: false

  release_assets:
    name: Release assets
    needs: create_release # we need to know the upload URL
    runs-on: ${{ matrix.config.os }} # we run many different builds
    strategy:
      # just an example matrix
      matrix:
        config:
          - os: ubuntu-latest
    steps:
      # checkout of cource
      - name: Checkout code
        uses: actions/checkout@v1
      # ... whatever build and packaging steps you need here
      
      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.15
        id: go

      - name: Build
        run: go build -o helloworld -v 

      - name: Test
        run: go test -v
      
      # and finally do an upload!
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create_release.outputs.upload_url }}
          # This is how it will be named on the release page. Put hatever name
          # you like, remember that they need to be different for each platform.
          # You can choose any build matrix parameters. For Rust I use the
          # target triple.
          asset_name: HelloWorld
          # The path to the file you want to upload.
          asset_path: ./helloworld
          # probably you will need to change it, but most likely you are
          # uploading a binary file
          asset_content_type: application/octet-stream
